NotificationTimer
by @zeroichi

このアプリケーションについて
============================
タイマーを予めセットしておき，タイムアウト時刻になったらウィンドウを
ポップアップして報せてくれるツールです．

主に多くのブラウザゲームに見られる「一定の時間を要する行動」を効率的に行う
ために開発していますが，ラーメンタイマー等にも活用できると思います．


起動方法
========
開発環境を持っている方はプロジェクトファイルを開いてビルドしてください．
そうでない方は Msbuild 等のツールを用いてビルドしてください．
ビルド後，出来上がった notification_timer.exe を実行すると起動します．

初回起動時は初期設定画面が表示されますが，何も押さずに「OK」を押すだけで
大丈夫です．


簡単な使い方
============
まず「ジョブ名」の欄に他のタイマーと区別しやすい名前をいれてください．

次に時間を指定します．時間の指定の方法は 2 種類あり，
・ジョブ投入後から一定時間後にタイムアウトになる「相対指定タイプ」
・指定した時刻にタイムアウトになる「絶対指定タイプ」
があります．

相対指定タイプの場合は「残り時間で指定」にチェックを入れ，右のボックスに
タイムアウトまでの秒数を入力してください．さらに右にあるボタンをクリック
するとマウス操作で簡単に時間を指定できます．

絶対指定タイプの場合は「時刻を指定」にチェックを入れ，右のボックスにタイム
アウトになる時刻を入力してください．
なお，ボックスにフォーカスがある状態で上下矢印キーを押すと数値が上下します．

時間の指定が済んだら「追加」ボタンを押してジョブリストに投入します．
ボタンを押した瞬間からタイマーがスタートします．
タイマーを複数設定する場合は，以上の操作を繰り返してください．

タイムアウト時間になるとウィンドウがポップアップしてユーザーに通知します．
このウィンドウは常に最前面に表示され，最小化できません．


再投入機能
==========
タイムアウトしたジョブは通常，ポップアップした通知ウィンドウの「確認」ボタンを
押すと消えます．しかし，ジョブ投入前に「再投入」のチェックを入れておくと，
タイムアウト確認後に全く同じジョブがリストに再投入されます．
毎日同じ時刻に同じ行動をする，一定間隔で同じ行動をする，というような場合に
有効です．

相対指定タイプの場合，「確認ボタン」を押した時点から設定時間後をタイムアウト
時刻とするジョブが再投入されます．

絶対指定タイプの場合，「確認ボタン」を押した時点から未来方向に最も近い設定時刻
をタイムアウト時刻とするジョブが再投入されます．
(要するに翌日の同じ時刻がタイムアウトになるということです)


テンプレート機能
================
同じジョブを何度も実行したい．しかし，「確認ボタン」を押してすぐに再投入して
欲しくはなく，自分のタイミングで再投入したい．
…このような場合はテンプレート機能を使います．

通常のジョブと同じようにジョブ名・時間を設定した後，追加ボタンを押さずに
「テンプレ化」ボタンを押すと，右上にあるテンプレートリストに追加されます．
テンプレートに追加された項目をダブルクリックすると，即座にテンプレートと
同じ名前・時間設定のジョブが複製され投入されます．

テンプレートを削除するには，リストの項目を選択した状態で Delete キーを押します．

なお，相対指定タイプに限り，設定秒数 0 のテンプレートを作成できます．
このテンプレートをダブルクリックすると時間設定ウィンドウが表れ，
そのテンプレートからジョブを投入する度に時間を設定することができます．
名前だけ同じで，時間が異なるジョブを複数作成する場合に便利です．


アプリケーションの設定
======================
画面下部の「設定」ボタンを押すと様々な設定を行うことができます．
設定ファイルはカレントディレクトリ (exeファイルを直接実行した場合は exe と同じ
ディレクトリ)の settings.xml に保存されます．

* サウンドの設定
ジョブのタイムアウト時に音を鳴らすことができます．
「ジョブ完了時に音を鳴らす」にチェックを入れ，下の「参照」ボタンを押して wav
ファイルを選択してください．

* ジョブリスト保存ディレクトリの変更
初期設定時なにもせずに「OK」を押した時はカレントディレクトリに保存されるよう
になっています．設定画面で「参照」ボタンを押すとジョブリストを保存する
ディレクトリを選択できます．


開発
====
OS: Windows 7 Professional
IDE: Visual Studio 2010
ランタイム: .NET Framework 4 Client Profile
言語: C#


その他
======
- 動作確認は Windows 7 でのみ行っています．
-- したがってトレンド(?)の Windows 8 ではどう動作するのか作者は知りません．
- P/Invoke を使って Windows API を直に呼び出している部分があるので，
  そのまま他の OS へ移植するのは難しいです．


TODO(改良予定)
==============
- ジョブリストのソート
- DropBox 等のネットワークストレージを利用した複数クライアント間での
  ジョブのリアルタイム同期
- 日付指定，曜日指定
- 時刻指定の UI
- 投入済みジョブの変更
- テンプレートの変更
- ジョブ作成の UI を別ウィンドウに分離
- ショートカットキーの充実


やりたいこと
============
- モバイル連携
- メール通知


